name: Create Multi-platform Release

on:
  push:
    tags:
      - 'v*' # Gatilho para tags como v1.0, v1.1, etc.

jobs:
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar dependências do Linux
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository universe
          sudo apt-get update
          sudo apt-get install -y make g++ liballegro5-dev liballegro-image5-dev liballegro-font5-dev liballegro-ttf5-dev liballegro-primitives5-dev liballegro-audio5-dev liballegro-acodec5-dev zip

      - name: Compilar para Linux
        run: make linux

      - name: Empacotar build para Linux
        run: |
          mkdir package-linux
          mv flappy.bin package-linux/
          cp -r assets/ package-linux/
          cd package-linux
          zip -r ../linux-build.zip .
      
      - name: Fazer upload do build Linux
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-zip
          path: linux-build.zip

  build-windows:
    name: Build for Windows (Cross-compilation)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar dependências de Cross-compilation
        run: |
          sudo apt-get update
          sudo apt-get install -y make g++-mingw-w64-x86-64 zip wget

      - name: Baixar e preparar Allegro para Windows
        run: |
          wget https://github.com/liballeg/allegro5/releases/download/5.2.9.0/allegro-x86_64-w64-mingw32-gcc-13.2.0-posix-seh-static-5.2.9.0.zip -O allegro.zip
          unzip allegro.zip
          mv allegro-*-static* allegro-build

      - name: Compilar para Windows
        run: make windows

      - name: Empacotar build para Windows
        run: |
          mkdir package-windows
          mv flappy.exe package-windows/
          cp -r assets/ package-windows/
          cd package-windows
          zip -r ../windows-build.zip .

      - name: Fazer upload do build Windows
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-zip
          path: windows-build.zip

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows] # Depende dos dois builds
    permissions:
      contents: write # Permissão para criar a release
    steps:
      - name: Baixar artefato do Linux
        uses: actions/download-artifact@v4
        with:
          name: linux-build-zip

      - name: Baixar artefato do Windows
        uses: actions/download-artifact@v4
        with:
          name: windows-build-zip
      
      - name: Criar Release e fazer upload dos pacotes
        uses: softprops/action-gh-release@v1
        with:
          files: |
            linux-build.zip
            windows-build.zip 